-- Booleans
T x y = x;
F x y = y;

-- SKI combinators
I x     = x;
K x y   = x;
S f g x = f x (g x);

succ n f x= f (n f x);

zero  f x = x;
one   f x = succ zero;
two   f x = succ one;
three f x = succ two;
four  f x = succ three;
five  f x = succ four;
six   f x = succ five;
seven f x = succ six;
eight f x = succ seven;
nine  f x = succ eight;
ten   f x = succ nine;

plus m n f x = m f (n f x);
mult m n f   = m (n f);
exp  m n     = n m;

-- Lists
fst  x y = T;
snd  x y = F;
pair x y f = f x y;

nil   x    = x;
cons  x xs = pair F (pair x xs);
head  xs   = fst (snd xs);
tail  xs   = snd (snd xs);
index xs n = head (n tail xs);

-- Let polymorphism
poly = I (I I) (I 69);
self = (\x -> x) (\x -> x);
